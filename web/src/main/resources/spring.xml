<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 把标记了@Controller注解的类转换为bean -->
	<context:component-scan base-package="com.xinran.service" />
	<context:component-scan base-package="com.xinran.business" />
	<context:component-scan base-package="com.xinran.controller" />

	<context:component-scan base-package="com.xinran.listener" />
	<context:component-scan base-package="com.xinran.boot" />



	<!-- 支持configurable注解 -->
	<context:load-time-weaver />

	<mvc:annotation-driven />


	<!-- 静态资源访问 -->
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/mock/" mapping="/mock/**" />

	<context:property-placeholder
		location="classpath:jdbc.properties,file:/home/admin/xinran/jdbc.properties"
		ignore-resource-not-found="true" />
	<!-- 可通过注解控制事务 -->
	<context:annotation-config />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.xinran.springmvc.interceptor.UserSessionInterceptor">
				<property name="noNeedLoginURLs">
					<list>
						<value>/img/</value>
						<value>/js/</value>
						<value>/css/</value>
						<value>/mock/</value>
						<value>/user/session/signIn</value>
						<value>/user/session/signUp</value>
						<value>/book/search</value>
						<value>/user/signUp</value>
                        <value>/user/signIn</value>
                        <value>/book/detail</value>
                        <value>/book/isbn</value>
                        <value>/book/location</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="handlerExceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.xinran.exception.AuthorizationException">redirect:/user/session/signIn</prop>
				<prop key="com.xinran.exception.AdminAuthorizationException">redirect:/user/session/admin</prop>
				<prop key="com.xinran.exception.MobileAuthorizationException">redirect:/mobile/user/session/signIn</prop>
				
			</props>
		</property>
	</bean>



	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
		<property name="toolboxConfigLocation" value="/WEB-INF/velocity/velocityToolbox.xml" />

	</bean>

	<bean id="velocityConfigurer"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/velocity/" />
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">utf-8</prop>
				<prop key="output.encoding">utf-8</prop>
				<prop key="file.resource.loader.cache">false</prop>
				<prop key="velocimacro.library.autoreload">true</prop>
			</props>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="1048576" />
		<property name="maxInMemorySize" value="40960" />
	</bean>


	<!--配置数据源 -->
	<bean id="jdbcDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="jdbcDataSource" />
		<property name="configLocation" value="classpath:batisConfig.xml" />

		<!-- <property name="configurationProperties"> <props> <prop key="mapUnderscoreToCamelCase">true</prop> 
			</props> </property> -->
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="jdbcDataSource" />
	</bean>

	<bean id="transaction"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		lazy-init="true" abstract="true">
		<!-- 配置事务管理器 -->
		<property name="transactionManager" ref="transactionManager"></property>
		<!-- 配置事务管理器 -->
		<property name="transactionAttributes">
			<props>


				<!-- 下面就开始配置各个模块所必须的部分，在各自的applicationContext-XXX-beans.xml配置的对于事务管理的详细信息。 
					首先就是配置事务的传播特性，如下： -->

				<!-- 配置事务传播特性 -->

				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="get*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="find*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="list*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="query*">PROPAGATION_REQUIRED,-Exception</prop>

			</props>
		</property>
	</bean>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xinran.dao.mapper" />
	</bean>

	<bean id="springContextUtil" class="com.xinran.util.SpringContextUtil" />

</beans>
